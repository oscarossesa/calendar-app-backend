{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvent.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/calendar/CalendarEvent.js","components/ui/NavBar.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendarMessages.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","auth","state","action","type","payload","calendar","map","e","id","filter","ui","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","CalendarEvent","title","NavBar","useSelector","onClick","openModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleCloseModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onSelectEvent","onDoubleClickEvent","onSelectSlot","selectable","onView","view","components","PrivateRouter","Component","component","isAuthenticated","rest","props","to","PublicRoute","AppRouter","exact","path","PrivateRoute","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c220bcc7.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[UI] Open modal',\r\n    uiCloseModal: '[UI] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[Event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n  checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      }\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      }\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { types } from \"../types/types\"\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños Gabito',\r\n//     start: moment().add(-4, 'hours').toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#FAFAFA',\r\n//     notes: 'Soy una nota',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Oscar'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      }\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload]\r\n      }\r\n    case types.eventClearActiveEvent:\r\n\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      }\r\n\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(e => (e.id === action.payload.id) ? action.payload : e)\r\n      }\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(e => (e.id !== state.activeEvent.id)),\r\n        activeEvent: null\r\n      }\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      }\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\"\r\nimport { authReducer } from \"./authReducer\"\r\nimport { calendarReducer } from \"./calendarReducer\"\r\nimport { uiReducer } from \"./uiReducer\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    calendar: calendarReducer,\r\n    ui: uiReducer\r\n})\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url)\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n  const url = `${baseUrl}/${endpoint}`\r\n  const token = localStorage.getItem('token') || ''\r\n\r\n  if (method === 'GET') {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    })\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n  }\r\n}\r\n\r\nexport {\r\n  fetchSinToken,\r\n  fetchConToken\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvent\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = event => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const { uid, name } = getState().auth\r\n\r\n    try {\r\n      const resp = await fetchConToken('events', event, 'POST')\r\n      const body = resp.json()\r\n\r\n      if (body.ok) {\r\n        event.id = body.event.id\r\n        event.user = {\r\n          _id: uid,\r\n          name: name\r\n        }\r\n\r\n        dispatch(eventAddNew(event))\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n})\r\n\r\nexport const eventSetActive = event => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent })\r\n\r\nexport const eventStartUpdated = event => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT')\r\n      const body = await resp.json()\r\n\r\n      if (body.ok) {\r\n        dispatch(eventUpdated(event))\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventUpdated = event => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { id } = getState().calendar.activeEvent\r\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE')\r\n      const body = await resp.json()\r\n\r\n      if (body.ok) {\r\n        dispatch(eventDeleted())\r\n      } else {\r\n        Swal.fire('Error', body.msg, 'error')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted })\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      const resp = await fetchConToken('events')\r\n      const body = await resp.json()\r\n\r\n      const events = prepareEvents(body.events)\r\n\r\n      dispatch(eventLoaded(events))\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst eventLoaded = events => ({\r\n  type: types.eventLoaded,\r\n  payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })\r\n","import Swal from \"sweetalert2\"\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { eventLogout } from \"./events\"\r\n\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken('auth', { email, password }, 'POST')\r\n    const body = await resp.json()\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST')\r\n    const body = await resp.json()\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      Swal.fire('Error', body.msg, 'error')\r\n    }\r\n  }\r\n}\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n\r\n    const resp = await fetchConToken('auth/renew')\r\n    const body = await resp.json()\r\n\r\n    if (body.ok) {\r\n      localStorage.setItem('token', body.token)\r\n      localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n      dispatch(login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }))\r\n    } else {\r\n      dispatch(checkingFinish())\r\n    }\r\n  }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear()\r\n    dispatch(eventLogout())\r\n    dispatch(logout())\r\n  }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n  const [values, setValues] = useState(initialState)\r\n\r\n  const reset = () => {\r\n    setValues(initialState)\r\n  }\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  return [values, handleInputChange, reset]\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport { startLogin, startRegister } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport './login.css'\r\n\r\nconst LoginScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [formLoginValues, handleLoginInputChange] = useForm({\r\n    loginEmail: 'oscarossesa@gmail.com',\r\n    loginPassword: '123456'\r\n  })\r\n\r\n  const { loginEmail, loginPassword } = formLoginValues\r\n\r\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n    registerName: 'Ignacio',\r\n    registerEmail: 'oscarossesa@gmail.com',\r\n    registerPassword1: '123456',\r\n    registerPassword2: '123456'\r\n  })\r\n\r\n  const { registerName, registerEmail, registerPassword1, registerPassword2 } = formRegisterValues\r\n\r\n  const handleLogin = event => {\r\n    event.preventDefault()\r\n    dispatch(startLogin(loginEmail, loginPassword))\r\n  }\r\n\r\n  const handleRegister = event => {\r\n    event.preventDefault()\r\n\r\n    if (registerPassword1 !== registerPassword2) {\r\n      Swal.fire('Error', 'Las contraseñas deben ser iguales.', 'error')\r\n    }\r\n    \r\n    dispatch(startRegister(registerEmail, registerPassword1, registerName))\r\n    // dispatch(startLogin(registerEmail, registerPassword1))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Ingreso</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"loginEmail\"\r\n                value={loginEmail}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"loginPassword\"\r\n                value={loginPassword}\r\n                onChange={handleLoginInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Login\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Registro</h3>\r\n          <form onSubmit={handleRegister}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                name=\"registerName\"\r\n                value={registerName}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Correo\"\r\n                name=\"registerEmail\"\r\n                value={registerEmail}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Contraseña\"\r\n                name=\"registerPassword1\"\r\n                value={registerPassword1}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repita la contraseña\"\r\n                name=\"registerPassword2\"\r\n                value={registerPassword2}\r\n                onChange={handleRegisterInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Crear cuenta\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\n\r\nconst CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>- {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch()\r\n  const { name } = useSelector(state => state.auth)\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout())\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">\r\n        {name}\r\n      </span>\r\n      <button\r\n        className=\"btn btn-outline-danger\"\r\n      >\r\n        <span onClick={handleLogout}>Salir</span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import { types } from \"../types/types\"\r\n\r\nexport const openModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst nowPlus = now.clone().add(1, 'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate()\r\n}\r\n\r\nconst CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(store => store.ui)\r\n    const { activeEvent } = useSelector(store => store.calendar)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const { notes, title, start, end } = formValues\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleChangeStartDate = (e) => {\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleChangeEndDate = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        dispatch(closeModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a fecha inicio.')\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdated(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        setTitleValid(true)\r\n        handleCloseModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={handleCloseModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            contentLabel=\"Example Modal\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleChangeStartDate}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleChangeEndDate}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default CalendarModal","export const messages = {\r\n  allDay: 'Todo el día',\r\n  previous: '<',\r\n  next: '>',\r\n  today: 'Hoy',\r\n  month: 'Mes',\r\n  week: 'Semana',\r\n  day: 'Día',\r\n  agenda: 'Agenda',\r\n  date: 'Fecha',\r\n  time: 'Hora',\r\n  event: 'Evento',\r\n  noEventsInRange: 'No hay eventos en este rango',\r\n  showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openModal } from '../../actions/ui'\r\n\r\nconst AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const openModalNewEvent = () => {\r\n        dispatch(openModal())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={openModalNewEvent}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nconst DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab","import React, { useEffect, useState } from 'react'\r\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar'\r\nimport CalendarEvent from './CalendarEvent'\r\nimport NavBar from '../ui/NavBar'\r\nimport CalendarModal from './CalendarModal'\r\nimport { messages } from '../../helpers/calendarMessages'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport AddNewFab from '../ui/AddNewFab'\r\nimport DeleteEventFab from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es')\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nconst CalendarScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n  const { events, activeEvent } = useSelector(state => state.calendar)\r\n  const { uid } = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(eventStartLoading())\r\n  }, [dispatch])\r\n\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block'\r\n    }\r\n\r\n    return { style }\r\n  }\r\n\r\n  const onDoubleClick = (e) => {\r\n    dispatch(openModal())\r\n  }\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e))\r\n  }\r\n\r\n  const onSelectSlot = () => {\r\n    dispatch(eventClearActiveEvent())\r\n  }\r\n\r\n  const onViewChange = (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e)\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <NavBar />\r\n      <BigCalendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        onSelectEvent={onSelectEvent}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n      <AddNewFab />\r\n      { activeEvent && <DeleteEventFab />}\r\n      <CalendarModal />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarScreen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PrivateRouter = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={(props) => (\r\n        (isAuthenticated) ? <Component {...props} /> : <Redirect to='/login' />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PrivateRouter\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({ \r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n }) => {\r\n  return (\r\n    <Route {...rest} \r\n      component={(props) => (\r\n        (isAuthenticated) ? <Redirect to='/' /> : <Component {...props} />\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport CalendarScreen from '../components/calendar/CalendarScreen'\r\nimport PrivateRouter from './PrivateRoute'\r\nimport PublicRoute from './PublicRoute'\r\n\r\nconst AppRouter = () => {\r\n  const dispatch = useDispatch()\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n    dispatch(startChecking())\r\n  }, [dispatch])\r\n\r\n  if (checking) {\r\n    return (<h5>Espere...</h5>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <PublicRoute\r\n            component={LoginScreen}\r\n            exact\r\n            isAuthenticated={!!uid}\r\n            path=\"/login\"\r\n          />\r\n          <PrivateRouter\r\n            component={CalendarScreen}\r\n            exact\r\n            isAuthenticated={!!uid}\r\n            path=\"/\"\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react'\r\nimport { store } from './store/store'\r\nimport AppRouter from './routes/AppRouter'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}